name: DEV Task

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
  workflow_dispatch:

jobs:
  oxldut:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Clone https://github.com/OptechX/OpetchX.Library.Drivers.UpdateTool.git
        run: git clone https://github.com/OptechX/OpetchX.Library.Drivers.UpdateTool.git
        shell: bash
      - name: Restore
        run: dotnet restore ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/oxldut.csproj
      - name: Build
        run: dotnet build ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/oxldut.csproj --no-restore
      - name: Publish
        run: dotnet publish ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool.sln -r linux-x64 -c Release /p:PublishSingleFile=true --self-contained
      - name: Copy oxldut to ./bin
        run: |
          mkdir -p ./bin
          cp ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/bin/Release/net7.0/linux-x64/publish/oxldut ./bin/oxldut

  dell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Clone https://github.com/OptechX/OpetchX.Library.Drivers.UpdateTool.git
        run: git clone https://github.com/OptechX/OpetchX.Library.Drivers.UpdateTool.git
        shell: bash
      - name: Restore
        run: dotnet restore ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/oxldut.csproj
      - name: Build
        run: dotnet build ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/oxldut.csproj --no-restore
      - name: Publish
        run: dotnet publish ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool.sln -r linux-x64 -c Release /p:PublishSingleFile=true --self-contained
      - name: Copy oxldut to ./bin
        run: |
          mkdir -p ./bin
          cp ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/bin/Release/net7.0/linux-x64/publish/oxldut ./bin/oxldut
      - name: Set up Python 3.10.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.9
      - name: Upgrade Pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: if [ -f app/lib/requirements.txt ]; then pip install -r app/lib/requirements.txt; fi
      - name: Generate Dell CSV Data
        run: |
          mFiles=`find app -name "dell*.py"`
          for f in ${mFiles[@]}
          do
            python3 "$f"
          done
        shell: bash
      - name: Archive Dell CSV output
        uses: actions/upload-artifact@v3
        with:
          name: Dell_CSV
          path: app/data/Dell
          retention-days: 1

  hp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Clone https://github.com/OptechX/OpetchX.Library.Drivers.UpdateTool.git
        run: git clone https://github.com/OptechX/OpetchX.Library.Drivers.UpdateTool.git
        shell: bash
      - name: Restore
        run: dotnet restore ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/oxldut.csproj
      - name: Build
        run: dotnet build ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/oxldut.csproj --no-restore
      - name: Publish
        run: dotnet publish ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool.sln -r linux-x64 -c Release /p:PublishSingleFile=true --self-contained
      - name: Copy oxldut to ./bin
        run: |
          mkdir -p ./bin
          cp ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/bin/Release/net7.0/linux-x64/publish/oxldut ./bin/oxldut
      - name: Set up Python 3.10.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.9
      - name: Upgrade Pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: if [ -f app/lib/requirements.txt ]; then pip install -r app/lib/requirements.txt; fi
      - name: Generate HP CSV Data
        run: |
          mFiles=`find app -name "hp*.py"`
          for f in ${mFiles[@]}
          do
            python3 "$f"
          done
        shell: bash
      - name: Archive HP CSV output
        uses: actions/upload-artifact@v3
        with:
          name: HP_CSV
          path: app/data/HP
          retention-days: 1
        
  lenovo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Clone https://github.com/OptechX/OpetchX.Library.Drivers.UpdateTool.git
        run: git clone https://github.com/OptechX/OpetchX.Library.Drivers.UpdateTool.git
        shell: bash
      - name: Restore
        run: dotnet restore ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/oxldut.csproj
      - name: Build
        run: dotnet build ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/oxldut.csproj --no-restore
      - name: Publish
        run: dotnet publish ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool.sln -r linux-x64 -c Release /p:PublishSingleFile=true --self-contained
      - name: Copy oxldut to ./bin
        run: |
          mkdir -p ./bin
          cp ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/bin/Release/net7.0/linux-x64/publish/oxldut ./bin/oxldut
      - name: Set up Python 3.10.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.9
      - name: Upgrade Pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: if [ -f app/lib/requirements.txt ]; then pip install -r app/lib/requirements.txt; fi
      - name: Generate Lenovo CSV Data
        run: |
          mFiles=`find app -name "lenovo*.py"`
          for f in ${mFiles[@]}
          do
            python3 "$f"
          done
        shell: bash
      - name: Archive Lenovo CSV output
        uses: actions/upload-artifact@v3
        with:
          name: Lenovo_CSV
          path: app/data/Lenovo
          retention-days: 1
      
  microsoft:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Clone https://github.com/OptechX/OpetchX.Library.Drivers.UpdateTool.git
        run: git clone https://github.com/OptechX/OpetchX.Library.Drivers.UpdateTool.git
        shell: bash
      - name: Restore
        run: dotnet restore ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/oxldut.csproj
      - name: Build
        run: dotnet build ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/oxldut.csproj --no-restore
      - name: Publish
        run: dotnet publish ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool.sln -r linux-x64 -c Release /p:PublishSingleFile=true --self-contained
      - name: Copy oxldut to ./bin
        run: |
          mkdir -p ./bin
          cp ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/bin/Release/net7.0/linux-x64/publish/oxldut ./bin/oxldut
      - name: Download Microsoft XML file
        shell: pwsh
        run: |
          # Create the folder for output
          New-Item -ItemType Directory -Path "./app/data/Microsoft" -Force -Confirm:$false

          # URL of the XML file
          $url = "https://raw.githubusercontent.com/maurice-daly/DriverAutomationTool/master/Data/MSProducts.xml"

          # Destination path to save the downloaded XML file
          $destinationPath = "app/data/Microsoft/MSProducts.xml"

          # Invoke web request to download the file
          Invoke-WebRequest -Uri $url -OutFile $destinationPath

          # Check if the file was downloaded successfully
          if (-not(Test-Path $destinationPath)) {
              Write-Host "Failed to download the file."
          }
      - name: Archive Microsoft XML output
        uses: actions/upload-artifact@v3
        with:
          name: Microsoft_XML
          path: app/data/Microsoft
          retention-days: 1

  auto-pr:
    needs:
      - dell
      - hp
      - lenovo
      - microsoft
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create pull request
        run: gh pr create -B main -H dev --title 'Auto PR dev into main' --body 'Automatically created by gh-actions.'
        env:
          GH_TOKEN: ${{ github.token }}

  auto-merge:
    needs:
      - auto-pr
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: merge pull request
        run: gh pr merge --merge
        env:
          GH_TOKEN: ${{ github.token }}