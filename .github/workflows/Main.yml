name: MAIN Task

on:
  schedule:
    - cron: 14 11 * * 1,4
  workflow_dispatch: null

jobs:
  dell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Clone https://github.com/OptechX/OpetchX.Library.Drivers.UpdateTool.git
        run: git clone https://github.com/OptechX/OpetchX.Library.Drivers.UpdateTool.git
        shell: bash
      - name: Restore
        run: dotnet restore ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/oxldut.csproj
      - name: Build
        run: dotnet build ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/oxldut.csproj --no-restore
      - name: Publish
        run: dotnet publish ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool.sln -r linux-x64 -c Release /p:PublishSingleFile=true --self-contained
      - name: Copy oxldut to ./bin
        run: |
          mkdir -p ./bin
          cp ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/bin/Release/net7.0/linux-x64/publish/oxldut ./bin/oxldut
      - name: Set up Python 3.10.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.9
      - name: Upgrade Pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: if [ -f app/lib/requirements.txt ]; then pip install -r app/lib/requirements.txt; fi
      - name: Generate Dell CSV Data
        run: |
          mFiles=`find app -name "dell*.py"`
          for f in ${mFiles[@]}
          do
            python3 "$f"
          done
        shell: bash
      - name: Archive Dell CSV output
        uses: actions/upload-artifact@v3
        with:
          name: Dell_CSV
          path: app/data/Dell
          retention-days: 1
      - name: Inject Dell Latitude
        run: |
          Get-ChildItem -Path ./app/data/Dell -File | Where-Object -FilterScript { $_.Name -like "*latitude*.csv" } | ForEach-Object { & bin/oxldut --csv $_.FullName --oem Dell }
        shell: pwsh
      - name: Inject Dell OptiPlex
        run: |
          Get-ChildItem -Path ./app/data/Dell -File | Where-Object -FilterScript { $_.Name -like "*latitude*.csv" } | ForEach-Object { & bin/oxldut --csv $_.FullName --oem Dell }
        shell: pwsh
      - name: Inject Dell XPS
        run: |
          Get-ChildItem -Path ./app/data/Dell -File | Where-Object -FilterScript { $_.Name -like "*latitude*.csv" } | ForEach-Object { & bin/oxldut --csv $_.FullName --oem Dell }
        shell: pwsh

  hp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Install GOogle Chrome
        run: |
          # Install Google Chrome
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb
          sudo apt-get install -f
      - name: Clone https://github.com/OptechX/OpetchX.Library.Drivers.UpdateTool.git
        run: git clone https://github.com/OptechX/OpetchX.Library.Drivers.UpdateTool.git
        shell: bash
      - name: Restore
        run: dotnet restore ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/oxldut.csproj
      - name: Build
        run: dotnet build ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/oxldut.csproj --no-restore
      - name: Publish
        run: dotnet publish ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool.sln -r linux-x64 -c Release /p:PublishSingleFile=true --self-contained
      - name: Copy oxldut to ./bin
        run: |
          mkdir -p ./bin
          cp ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/bin/Release/net7.0/linux-x64/publish/oxldut ./bin/oxldut
      - name: Set up Python 3.10.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.9
      - name: Upgrade Pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: if [ -f app/lib/requirements.txt ]; then pip install -r app/lib/requirements.txt; fi
      - name: Generate HP CSV Data
        run: |
          mFiles=`find app -name "hp*.py"`
          for f in ${mFiles[@]}
          do
            python3 "$f"
          done
        shell: bash
      - name: Archive HP CSV output
        uses: actions/upload-artifact@v3
        with:
          name: HP_CSV
          path: app/data/HP
          retention-days: 1
      - name: Update HP CSV Files
        run: ./app/lib/hp-create-csv.ps1
        shell: pwsh
      - name: Inject HP Win10
        run: |
          Get-ChildItem -Path ./app/data/HP -File | Where-Object -FilterScript { $_.Name -like "*win10*.csv" } | ForEach-Object { & bin/oxldut --csv $_.FullName --oem Dell }
        shell: pwsh
      - name: Inject HP Win11
        run: |
          Get-ChildItem -Path ./app/data/HP -File | Where-Object -FilterScript { $_.Name -like "*win11*.csv" } | ForEach-Object { & bin/oxldut --csv $_.FullName --oem Dell }
        shell: pwsh
        
  lenovo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Clone https://github.com/OptechX/OpetchX.Library.Drivers.UpdateTool.git
        run: git clone https://github.com/OptechX/OpetchX.Library.Drivers.UpdateTool.git
        shell: bash
      - name: Restore
        run: dotnet restore ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/oxldut.csproj
      - name: Build
        run: dotnet build ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/oxldut.csproj --no-restore
      - name: Publish
        run: dotnet publish ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool.sln -r linux-x64 -c Release /p:PublishSingleFile=true --self-contained
      - name: Copy oxldut to ./bin
        run: |
          mkdir -p ./bin
          cp ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/bin/Release/net7.0/linux-x64/publish/oxldut ./bin/oxldut
      - name: Set up Python 3.10.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.9
      - name: Upgrade Pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: if [ -f app/lib/requirements.txt ]; then pip install -r app/lib/requirements.txt; fi
      - name: Generate Lenovo CSV Data
        run: |
          mFiles=`find app -name "lenovo*.py"`
          for f in ${mFiles[@]}
          do
            python3 "$f"
          done
        shell: bash
      - name: Archive Lenovo CSV output
        uses: actions/upload-artifact@v3
        with:
          name: Lenovo_CSV
          path: app/data/Lenovo
          retention-days: 1
      - name: Update Lenovo CSV Files
        run: |
          ./app/lib/lenovo-laptop-create-csv.ps1
          ./app/lib/lenovo-thinkcentre-create-csv.ps1
          ./app/lib/lenovo-thinkpad-create-csv.ps1
          ./app/lib/lenovo-thinkstation-create-csv.ps1
        shell: pwsh
      - name: Inject Lenovo Win10
        run: |
          Get-ChildItem -Path ./app/data/Lenovo -File | Where-Object -FilterScript { $_.Name -like "*win10*.csv" } | ForEach-Object { & bin/oxldut --csv $_.FullName --oem Lenovo }
        shell: pwsh
      - name: Inject Lenovo Win11
        run: |
          Get-ChildItem -Path ./app/data/Lenovo -File | Where-Object -FilterScript { $_.Name -like "*win11*.csv" } | ForEach-Object { & bin/oxldut --csv $_.FullName --oem Lenovo }
        shell: pwsh

  microsoft:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Clone https://github.com/OptechX/OpetchX.Library.Drivers.UpdateTool.git
        run: git clone https://github.com/OptechX/OpetchX.Library.Drivers.UpdateTool.git
        shell: bash
      - name: Restore
        run: dotnet restore ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/oxldut.csproj
      - name: Build
        run: dotnet build ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/oxldut.csproj --no-restore
      - name: Publish
        run: dotnet publish ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool.sln -r linux-x64 -c Release /p:PublishSingleFile=true --self-contained
      - name: Copy oxldut to ./bin
        run: |
          mkdir -p ./bin
          cp ./OpetchX.Library.Drivers.UpdateTool/OptechX.Library.Drivers.UpdateTool/bin/Release/net7.0/linux-x64/publish/oxldut ./bin/oxldut
      - name: Download Microsoft XML file
        shell: pwsh
        run: |
          # URL of the XML file
          $url = "https://raw.githubusercontent.com/maurice-daly/DriverAutomationTool/master/Data/MSProducts.xml"

          # Destination path to save the downloaded XML file
          $destinationPath = "app/data/Microsoft/MSProducts.xml"

          # Invoke web request to download the file
          Invoke-WebRequest -Uri $url -OutFile $destinationPath

          # Check if the file was downloaded successfully
          if (-not(Test-Path $destinationPath)) {
              Write-Host "Failed to download the file."
          }
      - name: Archive Microsoft XML output
        uses: actions/upload-artifact@v3
        with:
          name: Microsoft_XML
          path: app/data/Microsoft
          retention-days: 1
      - name: Inject Microsoft
        run: Get-ChildItem -Path ./app/data/Microsoft -File | Where-Object -FilterScript { $_.Name -like "MSProducts.xml" } | ForEach-Object { & bin/oxldut --xml $_.FullName --oem Microsoft }
        shell: pwsh
